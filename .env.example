# .env.docker
ENV_FILE_PATH=.env.docker
CONFIG_REPO_PATH=../sentiric-config
# --- Temel Ortam Ayarları ---
ENV=development
NODE_ENV=development
LOG_LEVEL=debug
RUST_LOG=debug,sentiric_media_service=debug,tonic=warn,h2=warn

# Docker ve Docker Compose Bilgileri
DOCKER_REGISTRY=ghcr.io/sentiric
TAG=latest
NETWORK_NAME=sentiric-net
COMPOSE_HTTP_TIMEOUT=300

# 12-Factor App" prensipleri.
SENTIRIC_DATA_PATH=data

# Platform Genelindeki Ortak Ayarlar
ASSETS_BASE_PATH=assets
AI_SERVICE_TIMEOUT=10
GRPC_TLS_CA_PATH=/etc/sentiric/tls/ca.crt

# -----

# environments\common\postgres.env
POSTGRES_DB=sentiric_db
POSTGRES_USER=sentiric
POSTGRES_PASSWORD=sentiric_pass
POSTGRES_DB_HOST=postgres
POSTGRES_DB_PORT=5432
POSTGRES_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_DB_HOST}:${POSTGRES_DB_PORT}/${POSTGRES_DB}?sslmode=disable

# environments\common\pgadmin.env
PGADMIN_DEFAULT_EMAIL=admin@sentirik.com
PGADMIN_DEFAULT_PASSWORD=admin

# environments\common\qdrant.env
VECTOR_DB=sentiric_db
VECTOR_DB_HOST=qdrant
VECTOR_DB_PORT=6333
VECTOR_DB_COLLECTION_NAME=sentiric_kb
VECTOR_DB_COLLECTION_PREFIX=sentiric_kb_
VECTOR_DB_EMBEDDING_MODEL_NAME=all-MiniLM-L6-v2
VECTOR_DB_URL="${VECTOR_DB_HOST}:${VECTOR_DB_PORT}"
# YENİ: Qdrant bağlantısında HTTPS (TLS) kullanılıp kullanılmayacağını belirtir.
# Yerel Docker için 'false', Qdrant Cloud için 'true' olmalıdır.
VECTOR_DB_USE_HTTPS=false

# environments\common\rabbitmq.env
RABBITMQ_HOST=rabbitmq
RABBITMQ_PORT=5672
RABBITMQ_DEFAULT_USER=sentiric
RABBITMQ_DEFAULT_PASS=sentiric_pass
RABBITMQ_URL="amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@${RABBITMQ_HOST}:${RABBITMQ_PORT}/%2f"
RABBITMQ_CHANNEL=call.events

# environments\common\redis.env
REDIS_HOST=redis
REDIS_PORT=6379
# YENİ: Redis bağlantısında SSL/TLS kullanılıp kullanılmayacağını belirtir.
# Yerel Docker için 'false', Upstash gibi bulut servisleri için 'true' olmalıdır.
REDIS_USE_SSL=false
REDIS_URL="redis://${REDIS_HOST}:${REDIS_PORT}/0"

# environments\services\user-service.env
USER_SERVICE_HOST=user-service
USER_SERVICE_PORT=5000
USER_SERVICE_URL="${USER_SERVICE_HOST}:${USER_SERVICE_PORT}"

USER_SERVICE_GRPC_PORT=50053
USER_SERVICE_GRPC_URL="${USER_SERVICE_HOST}:${USER_SERVICE_GRPC_PORT}"

USER_SERVICE_CERT_PATH=/etc/sentiric/tls/user-service-chain.crt
USER_SERVICE_KEY_PATH=/etc/sentiric/tls/user-service.key

# environments\services\media-service.env

# --- Media Servis Ayarları ---
MEDIA_SERVICE_HOST="media-service"
MEDIA_SERVICE_PORT=5002
MEDIA_SERVICE_URL="${MEDIA_SERVICE_HOST}:${MEDIA_SERVICE_PORT}"

MEDIA_SERVICE_GRPC_PORT=50052
MEDIA_SERVICE_GRPC_URL="${MEDIA_SERVICE_HOST}:${MEDIA_SERVICE_GRPC_PORT}"

MEDIA_SERVICE_METRICS_PORT=9091

# Bu IP, media-service'in çalıştığı ve Docker dışından erişilebilen ana makinenin IP'sidir.
MEDIA_SERVICE_PUBLIC_IP="${MEDIA_SERVICE_HOST}"

# Windows/macOS'ta bu, container'ın kendi IP'si olabilir. Gerçek sunucuda ise sunucunun IP'si.
MEDIA_SERVICE_RTP_TARGET_IP="${MEDIA_SERVICE_HOST}"

MEDIA_SERVICE_RECORD_BASE_PATH="/sentiric-media-record"

# --- RTP Ayarları ---
RTP_SERVICE_LISTEN_ADDRESS="0.0.0.0"
RTP_SERVICE_PORT_QUARANTINE_SECONDS=2
RTP_SERVICE_PORT_MIN=10000
RTP_SERVICE_PORT_MAX=10100

# --- Media Live ---
RTP_SESSION_INACTIVITY_TIMEOUT_SECONDS=10
RTP_COMMAND_CHANNEL_BUFFER=32
LIVE_AUDIO_STREAM_BUFFER=64

# --- Asset Yolu ---
ASSETS_BASE_PATH="assets"

MEDIA_SERVICE_CERT_PATH=/etc/sentiric/tls/media-service-chain.crt
MEDIA_SERVICE_KEY_PATH=/etc/sentiric/tls/media-service.key

# environments\services\tts-edge-service.env
TTS_EDGE_SERVICE_HOST=tts-edge-service
TTS_EDGE_SERVICE_PORT=5006
TTS_EDGE_SERVICE_URL="http://${TTS_EDGE_SERVICE_HOST}:${TTS_EDGE_SERVICE_PORT}"

TTS_EDGE_SERVICE_MODEL_NAME="tts_models/multilingual/multi-dataset/xtts_v2"
TTS_EDGE_SERVICE_MODEL_DEVICE="auto"
TTS_EDGE_SERVICE_DEFAULT_SPEAKER_WAV_PATH="/app/docs/audio/speakers/tr/default_male.wav"
TTS_EDGE_SERVICE_CERT_PATH=/etc/sentiric/tls/tts-edge-service-chain.crt
TTS_EDGE_SERVICE_KEY_PATH=/etc/sentiric/tls/tts-edge-service.key

# environments\services\tts-gateway.env
TTS_GATEWAY_HOST=tts-gateway
TTS_GATEWAY_PORT=50051
TTS_GATEWAY_URL="${TTS_GATEWAY_HOST}:${TTS_GATEWAY_PORT}"

# YENİ: Sunucunun kendi kimliğini sunabilmesi için sertifika yolları eklendi.
TTS_GATEWAY_CERT_PATH=/etc/sentiric/tls/tts-gateway-chain.crt
TTS_GATEWAY_KEY_PATH=/etc/sentiric/tls/tts-gateway.key
GRPC_TLS_CA_PATH=/etc/sentiric/tls/ca.crt

# DİKKAT: Bu URL'ler, uzman motorların kendi .env dosyalarındaki PORT tanımlarıyla EŞLEŞMELİDİR.
TTS_COQUI_SERVICE_URL=tts-coqui-service:5002
TTS_EDGE_SERVICE_URL=tts-edge-service:5006
TTS_ELEVENLABS_SERVICE_URL=tts-elevenlabs-service:5007
TTS_STYLETTS2_SERVICE_URL=tts-styletts2-service:5008

# --- YENİ: Google TTS Uzman Motoru ---
# Bu, gelecekte oluşturacağımız ve Google'ın TTS modelini barındıracak yeni bir servisin adresi olacak.
TTS_GOOGLE_SERVICE_URL=http://tts-google-service:5009

# environments\services\stt-service.env
STT_SERVICE_HOST=stt-service
STT_SERVICE_PORT=5001
STT_SERVICE_URL="http://${STT_SERVICE_HOST}:${STT_SERVICE_PORT}"

STT_SERVICE_GRPC_PORT=50050
STT_SERVICE_GRPC_URL="${STT_SERVICE_HOST}:${STT_SERVICE_GRPC_PORT}"

STT_SERVICE_CERT_PATH=/etc/sentiric/tls/stt-service-chain.crt
STT_SERVICE_KEY_PATH=/etc/sentiric/tls/stt-service.key

# --- ADAPTÖR SEÇİMİ ---
# Bu değeri "google_live" olarak değiştirdiğinizde, servis Google'ı kullanacaktır.
STT_SERVICE_ADAPTER="faster_whisper"

# --- 1) Faster-Whisper Adaptör Ayarları ---
# STT_SERVICE_ADAPTER="faster_whisper" iken bu ayarlar kullanılır.
STT_SERVICE_MODEL_SIZE=medium
STT_SERVICE_DEVICE=cpu
STT_SERVICE_COMPUTE_TYPE=int8
STT_SERVICE_TARGET_SAMPLE_RATE=16000
STT_SERVICE_LOGPROB_THRESHOLD=-1.0
STT_SERVICE_NO_SPEECH_THRESHOLD=0.85

# --- 2) YENİ: Google Live API Adaptör Ayarları ---
# STT_SERVICE_ADAPTER="google_live" iken bu ayarlar kullanılır.
STT_SERVICE_GOOGLE_MODEL_NAME="gemini-2.5-flash-preview-native-audio-dialog"

# environments\services\llm-service.env
LLM_SERVICE_HOST=llm-service
LLM_SERVICE_PORT=7860
LLM_SERVICE_URL="http://${LLM_SERVICE_HOST}:${LLM_SERVICE_PORT}"

LLM_PROVIDER=gemini
LLM_MODEL_NAME="gemini-2.0-flash"
LLM_SERVICE_CERT_PATH=/etc/sentiric/tls/llm-service-chain.crt
LLM_SERVICE_KEY_PATH=/etc/sentiric/tls/llm-service.key

# environments\services\knowledge-service.env
KNOWLEDGE_SERVICE_HOST=knowledge-service
KNOWLEDGE_SERVICE_PORT=5055
KNOWLEDGE_SERVICE_URL="${KNOWLEDGE_SERVICE_HOST}:${KNOWLEDGE_SERVICE_PORT}"

KNOWLEDGE_SERVICE_GRPC_PORT=50055
# Dinamik olarak Knowledge Client'ı yapılandırmaya göre oluştur
# KNOWLEDGE_SERVICE_GRPC_URL="${KNOWLEDGE_SERVICE_HOST}:${KNOWLEDGE_SERVICE_GRPC_PORT}"

# Yapılandırılabilir RAG parametresi
KNOWLEDGE_SERVICE_TOP_K=3

KNOWLEDGE_SERVICE_CERT_PATH=/etc/sentiric/tls/knowledge-service-chain.crt
KNOWLEDGE_SERVICE_KEY_PATH=/etc/sentiric/tls/knowledge-service.key

EMBEDDING_MODEL_NAME=${VECTOR_DB_EMBEDDING_MODEL_NAME}

# environments\services\agent-service.env
AGENT_SERVICE_HOST=agent-service
AGENT_SERVICE_PORT=0000
AGENT_SERVICE_URL="${AGENT_SERVICE_HOST}:${AGENT_SERVICE_PORT}"

AGENT_SERVICE_CERT_PATH=/etc/sentiric/tls/agent-service-chain.crt
AGENT_SERVICE_KEY_PATH=/etc/sentiric/tls/agent-service.key

METRICS_PORT_AGENT=9091 # Metrik portlarını servis bazında ayırmak daha iyi

# YENİ: Harici olarak yapılandırılabilir diyalog parametreleri (AGENT-IMPRV-01)
AGENT_MAX_CONSECUTIVE_FAILURES=2
AGENT_ALLOWED_SPEAKER_DOMAINS="sentiric.github.io"

# --- YENİ: Diyalog Yönetim Modu ---
# "state_machine": Mevcut, adım adım ilerleyen diyalog döngüsü.
# "live_stream": Google LiveAPI gibi tam çift yönlü modeller için tek, sürekli akış modu.
AGENT_DIALOG_MODE="state_machine"